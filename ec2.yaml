AWSTemplateFormatVersion: '2010-09-09'
Description: ec2 configuration template


Parameters:  
    keyName: 
     Type: AWS::EC2::KeyPair::KeyName

    InstanceType: 
      Type: String
      Description: please select instance type
      Default: t2.small
      AllowedValues: 
       - t2.small
       - t2.nano
       - t2.medium

    VPCCidrBlock:
     Type: String
     Default: 10.0.0.0/16
     Description: cidr range of vpc

    SubnetCidrRange:
     Type: String
     Default: 10.0.1.0/24
     Description: cidr range for subnet


Resources:

   VPCStack: 
      Type: AWS::CloudFormation::Stack
      Properties: 
        TemplateURL: https://cloudformation-block.s3.amazonaws.com/vpc.yaml
        Parameters: 
           VPCCidrBlock: !Ref VPCCidrBlock
           SubnetCidrRange: !Ref SubnetCidrRange
        TimeoutInMinutes: 5 

   SecurityGroupStack:
      Type: AWS::CloudFormation::Stack
      Properties: 
       TemplateURL: https://cloudformation-block.s3.amazonaws.com/sg.yaml 
       Parameters:  
          VpcIdOfSecurityGroup: !GetAtt VPCStack.Outputs.VpcId

 
   mytestEC2: 
     Type: AWS::EC2::Instance 
     Properties: 
       ImageId: ami-026b57f3c383c2eec
       InstanceType: !Ref InstanceType 
       KeyName: !Ref keyName
       NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !GetAtt VPCStack.Outputs.SubnetId
          GroupSet:
            - !GetAtt SecurityGroupStack.Outputs.SecurityGroupId 
       UserData: 
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Heello from Jasmeet the devops Engineer in  $(hostname -f)</h1>" > /var/www/html/index.html 

           
Outputs: 
   AppURL: 
     Description: URL of my application
     Value: !Sub 'http://${mytestEC2.PublicDnsName}:80/index.html'
